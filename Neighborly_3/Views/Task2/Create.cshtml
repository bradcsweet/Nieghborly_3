@model Neighborly_3.Models.Task2

@{
    ViewBag.Title = "Create";
}


<div class="siteBackground">
    <div class="thumbnail createThumbnail">
        <h2 class="lalazar centerText">Create</h2>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">


                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @*@Html.LabelFor(model => model.TaskTitle, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.TaskTitle, new { htmlAttributes = new { @class = "form-control", placeholder = "Title" } })
                        @Html.ValidationMessageFor(model => model.TaskTitle, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.TaskDescription, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.TaskDescription, new { htmlAttributes = new { @class = "form-control textBox", placeholder = "Description" } })
                        @Html.ValidationMessageFor(model => model.TaskDescription, "", new { @class = "text-danger" })
                    </div>
                </div>


                @*<div class="form-group">
                        @Html.LabelFor(model => model.IsDone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsDone)
                                @Html.ValidationMessageFor(model => model.IsDone, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>*@

                @*<div class="form-group">
                        @Html.LabelFor(model => model.TimeStamp, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TimeStamp, new { htmlAttributes = new { @class = "form-control", @Value = DateTime.Now.ToString("MM\\/dd\\/yyyy h\\:mm tt") } })
                            @Html.ValidationMessageFor(model => model.TimeStamp, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                @*<div class="form-group">
                        @Html.LabelFor(model => model.IsAssigned, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IsAssigned)
                                @Html.ValidationMessageFor(model => model.IsAssigned, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.HelpProviderID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.HelpProviderID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.HelpProviderID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TaskCreatorID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TaskCreatorID, new { htmlAttributes = new { @class = "form-control", @Value = "57ee69cd-338c-4c36-8ccf-f6fee6e10487" } })
                            @Html.ValidationMessageFor(model => model.TaskCreatorID, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group">
                    <div class="col-md-12">
                        <input type="submit" value="Create" class="btn btn-default moveButton ask" />
                    </div>
                </div>
                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        }
    </div>
</div>
@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
