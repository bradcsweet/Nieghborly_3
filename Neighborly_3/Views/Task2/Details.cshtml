@model Neighborly_3.Models.Task2

@{
    ViewBag.Title = "You want to offer help";
}

<h2 class="lalazar">Task Details</h2>

<div class="row">
    <div class="col-md-4 text">
        <hr />
        <h2 class="detailsLeft lalazar">@Html.DisplayFor(model => model.TaskTitle)</h2>
        <br />
        <h5 class="detailsLeft muli">Created by: @ViewBag.UserName</h5>
        <br />
        <h5 class="detailsLeft muli">Email: @ViewBag.Email</h5>
        <br />
        <h5 class="detailsLeft muli">@Html.DisplayNameFor(model => model.TaskDescription): @Html.DisplayFor(model => model.TaskDescription)</h5>
        <br />
        <h5 class="detailsLeft muli">@Html.DisplayNameFor(model => model.IsDone): @Html.DisplayFor(model => model.IsDone)</h5>
        <br />
        <h5 class="detailsLeft muli">@Html.DisplayNameFor(model => model.TimeStamp): @Html.DisplayFor(model => model.TimeStamp)</h5>

        <div class="buttonsLeft">
            @Html.ActionLink("Message the task creator", "Create", "Messages", new { id = Model.TaskID }, new { @class = "btn btn-default ask", role = "button" })
            @Html.ActionLink("Offer Help", "Edit", new { id = Model.TaskID }, new { @class = "btn btn-default help", role = "button" })
        </div>
        <p class="centerButton">@Html.ActionLink("Back to List", "Index")</p>

        <p>
            @*@Html.ActionLink("Offer Help", "Edit", new { id = Model.TaskID }, new { @class = "btn btn-default", role = "button" })<text> </text> |*@
            @*@Html.ActionLink("Back to List", "Index")*@

            @*</h3>*@
            @*<dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.TaskTitle)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.TaskTitle)
                    </dd>


                    <dt>
                        @Html.DisplayNameFor(model => model.TaskDescription)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.TaskDescription)
                    </dd>


                    <dt>
                        @Html.DisplayNameFor(model => model.IsDone)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.IsDone)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.TimeStamp)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.TimeStamp)
                    </dd>
                </dl>*@
    </div>
    <div class="col-md-8">
        <div id="map"></div>
        <style>
            #map {
                height: 400px;
                width: 100%;
            }
        </style>
        <script>
            var geocoder;
            var map;
            function initMap() {
                var myLatlng = { lat: -25.363, lng: 131.044 };

                geocoder = new google.maps.Geocoder();

                map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 16,
                    center: myLatlng
                });

                codeAddress('@(ViewBag.Address)');

                //var marker = new google.maps.Marker({
                //    position: myLatlng,
                //    map: map,
                //    title: 'Click to zoom'
                //});

                //map.addListener('center_changed', function () {
                //    // 3 seconds after the center of the map has changed, pan back to the
                //    // marker.
                //    window.setTimeout(function () {
                //        map.panTo(marker.getPosition());
                //    }, 3000);
                //});

                //marker.addListener('click', function () {
                //    map.setZoom(8);
                //    map.setCenter(marker.getPosition());
                //});
            }
            function codeAddress(address) {
                geocoder.geocode({ address: address }, function (results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        map.setCenter(results[0].geometry.location);//center the map over the result
                        //place a marker at the location
                        var marker = new google.maps.Marker(
                        {
                            map: map,
                            position: results[0].geometry.location,
                            title: '@(Model.TaskTitle)'
                        });
                    } else {
                        alert('Geocode was not successful for the following reason: ' + status);
                    }
                });
            }
        </script>
        <script async defer
                src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBMajs03Y1NZL22_FwdbC-_pv11PxbibJg&callback=initMap">
        </script>
    </div>
</div>

@*<div>
    <hr />
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.TaskTitle)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TaskTitle)
        </dd>


        <dt>
            @Html.DisplayNameFor(model => model.TaskDescription)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TaskDescription)
        </dd>


        <dt>
            @Html.DisplayNameFor(model => model.IsDone)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsDone)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TimeStamp)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TimeStamp)
        </dd>

        @*<dt>
                @Html.DisplayNameFor(model => model.IsAssigned)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.IsAssigned)
            </dd>*@

@*<dt>
        @Html.DisplayNameFor(model => model.HelpProviderID)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.HelpProviderID)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => model.TaskCreatorID)
    </dt>

    <dd>
        @Html.DisplayFor(model => model.TaskCreatorID)
    </dd>*@
@*</dl>
    </div>*@

@*<h2>@ViewBag.UserName</h2>

    <body>
        <div id="map"></div>
        <style>
            #map {
                height: 400px;
                width: 100%;
            }
        </style>
        <script>
            var geocoder;
            var map;
            function initMap() {
                var myLatlng = { lat: -25.363, lng: 131.044 };

                geocoder = new google.maps.Geocoder();

                map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 16,
                    center: myLatlng
                });

                codeAddress('@(ViewBag.Address)');

                //var marker = new google.maps.Marker({
                //    position: myLatlng,
                //    map: map,
                //    title: 'Click to zoom'
                //});

                //map.addListener('center_changed', function () {
                //    // 3 seconds after the center of the map has changed, pan back to the
                //    // marker.
                //    window.setTimeout(function () {
                //        map.panTo(marker.getPosition());
                //    }, 3000);
                //});

                //marker.addListener('click', function () {
                //    map.setZoom(8);
                //    map.setCenter(marker.getPosition());
                //});
            }
            function codeAddress(address) {
                geocoder.geocode({ address: address }, function (results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        map.setCenter(results[0].geometry.location);//center the map over the result
                        //place a marker at the location
                        var marker = new google.maps.Marker(
                        {
                            map: map,
                            position: results[0].geometry.location,
                            title: '@(Model.TaskTitle)'
                        });
                    } else {
                        alert('Geocode was not successful for the following reason: ' + status);
                    }
                });
            }
        </script>
        <script async defer
                src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBMajs03Y1NZL22_FwdbC-_pv11PxbibJg&callback=initMap">
        </script>
    </body>*@

@*<div>
        @Html.ActionLink("Message the task creator", "Create", "Messages", new { id = Model.TaskID }, new { @class = "btn btn-default", role = "button" })
    </div>

    <p>
        @Html.ActionLink("Offer Help", "Edit", new { id = Model.TaskID }, new { @class = "btn btn-default", role = "button" })<text> </text> |
        @Html.ActionLink("Back to List", "Index")
    </p>*@
@*@Html.ActionLink("Edit", "Edit", new { id = item.TaskID }, new { @class = "btn btn-default", role = "button" })<text> </text>*@